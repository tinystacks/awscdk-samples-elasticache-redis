{
 "Resources": {
  "UndefinedRdsVpc5210172E": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.44.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/Resource"
   }
  },
  "UndefinedRdsVpcPublicSubnetSubnet1Subnet813569D6": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.44.0.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet1/Subnet"
   }
  },
  "UndefinedRdsVpcPublicSubnetSubnet1RouteTable5F01B661": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet1/RouteTable"
   }
  },
  "UndefinedRdsVpcPublicSubnetSubnet1RouteTableAssociation5469B108": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "UndefinedRdsVpcPublicSubnetSubnet1RouteTable5F01B661"
    },
    "SubnetId": {
     "Ref": "UndefinedRdsVpcPublicSubnetSubnet1Subnet813569D6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet1/RouteTableAssociation"
   }
  },
  "UndefinedRdsVpcPublicSubnetSubnet1DefaultRoute5BA0ED2D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "UndefinedRdsVpcPublicSubnetSubnet1RouteTable5F01B661"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "UndefinedRdsVpcIGWB7DF72FD"
    }
   },
   "DependsOn": [
    "UndefinedRdsVpcVPCGW3953B00B"
   ],
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet1/DefaultRoute"
   }
  },
  "UndefinedRdsVpcPublicSubnetSubnet2SubnetA35F6B3C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.44.32.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet2/Subnet"
   }
  },
  "UndefinedRdsVpcPublicSubnetSubnet2RouteTableFF8C21B5": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet2/RouteTable"
   }
  },
  "UndefinedRdsVpcPublicSubnetSubnet2RouteTableAssociation267D8F67": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "UndefinedRdsVpcPublicSubnetSubnet2RouteTableFF8C21B5"
    },
    "SubnetId": {
     "Ref": "UndefinedRdsVpcPublicSubnetSubnet2SubnetA35F6B3C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet2/RouteTableAssociation"
   }
  },
  "UndefinedRdsVpcPublicSubnetSubnet2DefaultRoute3A67EC74": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "UndefinedRdsVpcPublicSubnetSubnet2RouteTableFF8C21B5"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "UndefinedRdsVpcIGWB7DF72FD"
    }
   },
   "DependsOn": [
    "UndefinedRdsVpcVPCGW3953B00B"
   ],
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/PublicSubnetSubnet2/DefaultRoute"
   }
  },
  "UndefinedRdsVpcIsolatedSubnetSubnet1SubnetA5416AAA": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.44.64.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "IsolatedSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet1/Subnet"
   }
  },
  "UndefinedRdsVpcIsolatedSubnetSubnet1RouteTable900236DC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet1/RouteTable"
   }
  },
  "UndefinedRdsVpcIsolatedSubnetSubnet1RouteTableAssociation39358E46": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "UndefinedRdsVpcIsolatedSubnetSubnet1RouteTable900236DC"
    },
    "SubnetId": {
     "Ref": "UndefinedRdsVpcIsolatedSubnetSubnet1SubnetA5416AAA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet1/RouteTableAssociation"
   }
  },
  "UndefinedRdsVpcIsolatedSubnetSubnet2SubnetAC6E442E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.44.96.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "IsolatedSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet2/Subnet"
   }
  },
  "UndefinedRdsVpcIsolatedSubnetSubnet2RouteTable2051400D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet2/RouteTable"
   }
  },
  "UndefinedRdsVpcIsolatedSubnetSubnet2RouteTableAssociationB8BCBA29": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "UndefinedRdsVpcIsolatedSubnetSubnet2RouteTable2051400D"
    },
    "SubnetId": {
     "Ref": "UndefinedRdsVpcIsolatedSubnetSubnet2SubnetAC6E442E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/IsolatedSubnetSubnet2/RouteTableAssociation"
   }
  },
  "UndefinedRdsVpcIGWB7DF72FD": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "Default/UndefinedRdsVpc/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/IGW"
   }
  },
  "UndefinedRdsVpcVPCGW3953B00B": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    },
    "InternetGatewayId": {
     "Ref": "UndefinedRdsVpcIGWB7DF72FD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedRdsVpc/Vpc/VPCGW"
   }
  },
  "UndefinedrdsVpcSgsSecurityGroupAC0D29AD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Default/UndefinedrdsVpcSgs/SecurityGroup",
    "GroupName": "common",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "SSH",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "HTTP",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "HTTPS",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Postgres",
      "FromPort": 5432,
      "IpProtocol": "tcp",
      "ToPort": 5432
     }
    ],
    "VpcId": {
     "Ref": "UndefinedRdsVpc5210172E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedrdsVpcSgs/SecurityGroup/Resource"
   }
  },
  "UndefinedrdsPostgresRdsInstanceSubnetGroup3AC7649F": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for RdsInstance database",
    "SubnetIds": [
     {
      "Ref": "UndefinedRdsVpcIsolatedSubnetSubnet1SubnetA5416AAA"
     },
     {
      "Ref": "UndefinedRdsVpcIsolatedSubnetSubnet2SubnetAC6E442E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedrdsPostgres/RdsInstance/SubnetGroup/Default"
   }
  },
  "UndefinedrdsPostgresRdsInstanceSecret08FFBB70": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedrdsPostgres/RdsInstance/Secret/Resource"
   }
  },
  "UndefinedrdsPostgresRdsInstanceSecretAttachmentA43A2082": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "UndefinedrdsPostgresRdsInstanceSecret08FFBB70"
    },
    "TargetId": {
     "Ref": "UndefinedrdsPostgresRdsInstanceC0492B6F"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedrdsPostgres/RdsInstance/Secret/Attachment/Resource"
   }
  },
  "UndefinedrdsPostgresRdsInstanceC0492B6F": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "AllowMajorVersionUpgrade": true,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBInstanceIdentifier": "undefined-rds-postgres",
    "DBName": "tstesting",
    "DBSubnetGroupName": {
     "Ref": "UndefinedrdsPostgresRdsInstanceSubnetGroup3AC7649F"
    },
    "Engine": "postgres",
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "UndefinedrdsPostgresRdsInstanceSecret08FFBB70"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "UndefinedrdsPostgresRdsInstanceSecret08FFBB70"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MaxAllocatedStorage": 40,
    "Port": "5432",
    "PubliclyAccessible": false,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "UndefinedrdsVpcSgsSecurityGroupAC0D29AD",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "Default/UndefinedrdsPostgres/RdsInstance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12RwW7CMAyGn2X3NAw0uEMrIU6rWsR1clMPAm1SJQ4IVX33pQ201U52Pv/2bzkrvv7inx/wsJEob1ElC97mBOLGPPppUax4e2oEi3/VKY1Z6opKitwVCqlnU5ZpR3iEosKJT2xrrRYSSGo1illq5B0IpxkHRWh8vvf0Ac+X6eu1Jb/WpUZFLEfhjKTn3mjXDHZz0DFTWt4mQFCAxYOyBEogCz5jT7Kbg7faTzJhmWT37uyYHaitQcEZDW+DZS8M4QjmjDTbcBT8r3Qdy9BqZ8Rwp29HjQv3m9FYq1L2t+qY0iXyq13clxu+XPufulopI+MUyRp5FuIfZuhnB8UBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "Default/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "UndefinedRdsVpcVpcId7BF87B06": {
   "Description": "UndefinedRdsVpc-vpc-id",
   "Value": {
    "Ref": "UndefinedRdsVpc5210172E"
   }
  },
  "UndefinedrdsPostgresdbsecret6A8B2B48": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "undefined-rds-postgres-db-secret:",
      {
       "Ref": "UndefinedrdsPostgresRdsInstanceSecretAttachmentA43A2082"
      }
     ]
    ]
   }
  },
  "UndefinedrdsPostgresdbendpointport9F7089AA": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::GetAtt": [
        "UndefinedrdsPostgresRdsInstanceC0492B6F",
        "Endpoint.Address"
       ]
      },
      ":",
      {
       "Fn::GetAtt": [
        "UndefinedrdsPostgresRdsInstanceC0492B6F",
        "Endpoint.Port"
       ]
      }
     ]
    ]
   }
  },
  "UndefinedrdsPostgresdbname4967905D": {
   "Value": "tstesting"
  },
  "UndefinedrdsPostgresundefinedrdspostgressecretarnA1DD84B9": {
   "Description": "undefined-rds-postgres-secret-arn",
   "Value": {
    "Ref": "UndefinedrdsPostgresRdsInstanceSecretAttachmentA43A2082"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}