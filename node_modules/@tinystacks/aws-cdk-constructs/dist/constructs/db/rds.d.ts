import * as cdk from 'aws-cdk-lib';
import * as ec2 from 'aws-cdk-lib/aws-ec2';
import * as rds from 'aws-cdk-lib/aws-rds';
import { Construct } from 'constructs';
export interface RdsProps {
    vpc: ec2.IVpc;
    securityGroupsList: ec2.ISecurityGroup[];
    instanceType: ec2.InstanceType;
    subnetType: ec2.SubnetType;
    databaseName?: string;
    databaseUsername?: string;
    databaseEngine?: any;
    databasePort?: number;
    instanceIdentifier: string;
    storageSize?: number;
    dbArn?: string;
    isImported?: boolean;
}
export declare class Rds extends Construct {
    readonly RdsInstance: rds.DatabaseInstance;
    readonly _databaseName: string;
    readonly _databaseUsername: string;
    constructor(scope: Construct, id: string, props: RdsProps);
    get dbSecret(): cdk.aws_secretsmanager.ISecret | undefined;
    get db(): rds.DatabaseInstance;
    get dbName(): string;
    get dbUsername(): string;
    static OutputDescriptions: {
        secretArn: (instanceIdentifier: string) => string;
    };
}
