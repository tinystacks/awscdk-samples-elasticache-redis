"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ALB = void 0;
const constructs_1 = require("constructs");
const elbv2 = __importStar(require("aws-cdk-lib/aws-elasticloadbalancingv2"));
const iac_utils_1 = require("@tinystacks/iac-utils");
const aws_cdk_lib_1 = require("aws-cdk-lib");
class ALB extends constructs_1.Construct {
    constructor(scope, id, props) {
        super(scope, id);
        const { vpc, albName, internetAccess, securityGroup, albVpcSubnets, clusterName, stackName } = props;
        // create alb
        this._alb = new elbv2.ApplicationLoadBalancer(this, (0, iac_utils_1.constructId)('lb'), {
            vpc: vpc,
            loadBalancerName: albName,
            internetFacing: internetAccess,
            securityGroup: securityGroup,
            vpcSubnets: albVpcSubnets
        });
        // tag
        aws_cdk_lib_1.Tags.of(this).add('ingress.k8s.aws/resource', 'LoadBalancer');
        aws_cdk_lib_1.Tags.of(this).add('elbv2.k8s.aws/cluster', clusterName);
        aws_cdk_lib_1.Tags.of(this).add('ingress.k8s.aws/stack', stackName);
    }
    get albName() {
        return this._alb.loadBalancerName;
    }
}
exports.ALB = ALB;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxiLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbnN0cnVjdHMvbmV0d29ya2luZy9hbGIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyQ0FBdUM7QUFDdkMsOEVBQWdFO0FBQ2hFLHFEQUFvRDtBQUVwRCw2Q0FBbUM7QUFZbkMsTUFBYSxHQUFJLFNBQVEsc0JBQVM7SUFJaEMsWUFBYSxLQUFnQixFQUFFLEVBQVUsRUFBRSxLQUFlO1FBQ3hELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFakIsTUFBTSxFQUNKLEdBQUcsRUFDSCxPQUFPLEVBQ1AsY0FBYyxFQUNkLGFBQWEsRUFDYixhQUFhLEVBQ2IsV0FBVyxFQUNYLFNBQVMsRUFDVixHQUFHLEtBQUssQ0FBQztRQUNWLGFBQWE7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksS0FBSyxDQUFDLHVCQUF1QixDQUFDLElBQUksRUFBRSxJQUFBLHVCQUFXLEVBQUMsSUFBSSxDQUFDLEVBQUU7WUFDckUsR0FBRyxFQUFFLEdBQUc7WUFDUixnQkFBZ0IsRUFBRSxPQUFPO1lBQ3pCLGNBQWMsRUFBRSxjQUFjO1lBQzlCLGFBQWEsRUFBRSxhQUFhO1lBQzVCLFVBQVUsRUFBRSxhQUFhO1NBQzFCLENBQUMsQ0FBQztRQUNILE1BQU07UUFDTixrQkFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDOUQsa0JBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLHVCQUF1QixFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ3hELGtCQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBQ0QsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztJQUNwQyxDQUFDO0NBQ0Y7QUFoQ0Qsa0JBZ0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSAnY29uc3RydWN0cyc7XG5pbXBvcnQgKiBhcyBlbGJ2MiBmcm9tICdhd3MtY2RrLWxpYi9hd3MtZWxhc3RpY2xvYWRiYWxhbmNpbmd2Mic7XG5pbXBvcnQgeyBjb25zdHJ1Y3RJZCB9IGZyb20gJ0B0aW55c3RhY2tzL2lhYy11dGlscyc7XG5pbXBvcnQgeyBJU2VjdXJpdHlHcm91cCwgSVZwYywgU3VibmV0U2VsZWN0aW9uIH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWVjMic7XG5pbXBvcnQgeyBUYWdzIH0gZnJvbSAnYXdzLWNkay1saWInO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFsYlByb3BzIHtcbiAgICB2cGM6IElWcGNcbiAgICBjbHVzdGVyTmFtZTogc3RyaW5nXG4gICAgc3RhY2tOYW1lOiBzdHJpbmdcbiAgICBhbGJOYW1lPzogc3RyaW5nXG4gICAgaW50ZXJuZXRBY2Nlc3M/OiBib29sZWFuXG4gICAgc2VjdXJpdHlHcm91cD86IElTZWN1cml0eUdyb3VwXG4gICAgYWxiVnBjU3VibmV0cz86IFN1Ym5ldFNlbGVjdGlvblxufVxuXG5leHBvcnQgY2xhc3MgQUxCIGV4dGVuZHMgQ29uc3RydWN0IHtcblxuICBwcml2YXRlIF9hbGI6IGVsYnYyLkFwcGxpY2F0aW9uTG9hZEJhbGFuY2VyO1xuXG4gIGNvbnN0cnVjdG9yIChzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wczogQWxiUHJvcHMpIHtcbiAgICBzdXBlcihzY29wZSwgaWQpO1xuXG4gICAgY29uc3Qge1xuICAgICAgdnBjLFxuICAgICAgYWxiTmFtZSxcbiAgICAgIGludGVybmV0QWNjZXNzLFxuICAgICAgc2VjdXJpdHlHcm91cCxcbiAgICAgIGFsYlZwY1N1Ym5ldHMsXG4gICAgICBjbHVzdGVyTmFtZSxcbiAgICAgIHN0YWNrTmFtZVxuICAgIH0gPSBwcm9wcztcbiAgICAvLyBjcmVhdGUgYWxiXG4gICAgdGhpcy5fYWxiID0gbmV3IGVsYnYyLkFwcGxpY2F0aW9uTG9hZEJhbGFuY2VyKHRoaXMsIGNvbnN0cnVjdElkKCdsYicpLCB7XG4gICAgICB2cGM6IHZwYyxcbiAgICAgIGxvYWRCYWxhbmNlck5hbWU6IGFsYk5hbWUsXG4gICAgICBpbnRlcm5ldEZhY2luZzogaW50ZXJuZXRBY2Nlc3MsXG4gICAgICBzZWN1cml0eUdyb3VwOiBzZWN1cml0eUdyb3VwLFxuICAgICAgdnBjU3VibmV0czogYWxiVnBjU3VibmV0c1xuICAgIH0pO1xuICAgIC8vIHRhZ1xuICAgIFRhZ3Mub2YodGhpcykuYWRkKCdpbmdyZXNzLms4cy5hd3MvcmVzb3VyY2UnLCAnTG9hZEJhbGFuY2VyJyk7XG4gICAgVGFncy5vZih0aGlzKS5hZGQoJ2VsYnYyLms4cy5hd3MvY2x1c3RlcicsIGNsdXN0ZXJOYW1lKTtcbiAgICBUYWdzLm9mKHRoaXMpLmFkZCgnaW5ncmVzcy5rOHMuYXdzL3N0YWNrJywgc3RhY2tOYW1lKTtcbiAgfVxuICBwdWJsaWMgZ2V0IGFsYk5hbWUgKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2FsYi5sb2FkQmFsYW5jZXJOYW1lO1xuICB9XG59Il19