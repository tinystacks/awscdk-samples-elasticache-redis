import * as ec2 from 'aws-cdk-lib/aws-ec2';
import * as ecs from 'aws-cdk-lib/aws-ecs';
import * as iam from 'aws-cdk-lib/aws-iam';
import * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';
import { Construct } from 'constructs';
export interface EcsServiceProps {
    containerName: string;
    vpc: ec2.IVpc;
    ecsCluster: ecs.Cluster;
    containerImage?: string;
    repositoryImage?: ecs.ContainerImage;
    memoryLimitMiB: number;
    cpu: number;
    desiredCount: number;
    applicationPort: number;
    ecsSecurityGroup: ec2.SecurityGroup;
    ecsIamPolicyStatements: iam.PolicyStatement[];
    albTargetGroup?: elbv2.ApplicationTargetGroup;
    ecsTaskEnvVars: {
        [key: string]: string;
    };
    command?: string[];
}
export declare class EcsService extends Construct {
    private ecsService;
    constructor(scope: Construct, id: string, props: EcsServiceProps);
    service(): ecs.FargateService;
}
