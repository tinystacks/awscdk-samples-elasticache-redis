"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resourceNameRules = exports.alphaNumericOnly = exports.alphaNumericAndHyphen = void 0;
const alphaNumericAndHyphen = new RegExp(/[^a-zA-Z0-9-]+/, 'g');
exports.alphaNumericAndHyphen = alphaNumericAndHyphen;
const alphaNumericOnly = new RegExp(/[^a-zA-Z0-9]+/, 'g');
exports.alphaNumericOnly = alphaNumericOnly;
const resourceNameRules = {
    AWS: {
        s3BucketName: {
            // source: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
            characterLimit: 63,
            characterRestrictions: alphaNumericAndHyphen
        },
        iamRoleName: {
            characterLimit: 64,
            characterRestrictions: alphaNumericAndHyphen
        },
        lambdaFunctionName: {
            characterLimit: 64,
            characterRestrictions: alphaNumericAndHyphen
        },
        secretName: {
            characterLimit: 512,
            characterRestrictions: alphaNumericAndHyphen
        },
        cloudFormationLogicalId: {
            characterLimit: 255,
            characterRestrictions: alphaNumericOnly
        },
        apigName: {
            characterLimit: 255,
            characterRestrictions: alphaNumericAndHyphen
        },
        codebuildProjectName: {
            characterLimit: 255,
            characterRestrictions: alphaNumericAndHyphen
        },
        logGroupName: {
            characterLimit: 512,
            characterRestrictions: alphaNumericAndHyphen
        }
    }
};
exports.resourceNameRules = resourceNameRules;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtaW5nLXJlc3RyaWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9uYW1pbmcvbmFtaW5nLXJlc3RyaWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxNQUFNLHFCQUFxQixHQUFHLElBQUksTUFBTSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBOEM5RCxzREFBcUI7QUE3Q3ZCLE1BQU0sZ0JBQWdCLEdBQUcsSUFBSSxNQUFNLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBOEN4RCw0Q0FBZ0I7QUE1Q2xCLE1BQU0saUJBQWlCLEdBSW5CO0lBQ0YsR0FBRyxFQUFFO1FBQ0gsWUFBWSxFQUFFO1lBQ2QsdUZBQXVGO1lBQ3JGLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLHFCQUFxQixFQUFFLHFCQUFxQjtTQUM3QztRQUNELFdBQVcsRUFBRTtZQUNYLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLHFCQUFxQixFQUFFLHFCQUFxQjtTQUM3QztRQUNELGtCQUFrQixFQUFFO1lBQ2xCLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLHFCQUFxQixFQUFFLHFCQUFxQjtTQUM3QztRQUNELFVBQVUsRUFBRTtZQUNWLGNBQWMsRUFBRSxHQUFHO1lBQ25CLHFCQUFxQixFQUFFLHFCQUFxQjtTQUM3QztRQUNELHVCQUF1QixFQUFFO1lBQ3ZCLGNBQWMsRUFBRSxHQUFHO1lBQ25CLHFCQUFxQixFQUFFLGdCQUFnQjtTQUN4QztRQUNELFFBQVEsRUFBRTtZQUNSLGNBQWMsRUFBRSxHQUFHO1lBQ25CLHFCQUFxQixFQUFFLHFCQUFxQjtTQUM3QztRQUNELG9CQUFvQixFQUFFO1lBQ3BCLGNBQWMsRUFBRSxHQUFHO1lBQ25CLHFCQUFxQixFQUFFLHFCQUFxQjtTQUM3QztRQUNELFlBQVksRUFBRTtZQUNaLGNBQWMsRUFBRSxHQUFHO1lBQ25CLHFCQUFxQixFQUFFLHFCQUFxQjtTQUM3QztLQUNGO0NBQ0YsQ0FBQztBQUtBLDhDQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5hbWVSZXN0cmljdGlvbiB9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCBhbHBoYU51bWVyaWNBbmRIeXBoZW4gPSBuZXcgUmVnRXhwKC9bXmEtekEtWjAtOS1dKy8sICdnJyk7XG5jb25zdCBhbHBoYU51bWVyaWNPbmx5ID0gbmV3IFJlZ0V4cCgvW15hLXpBLVowLTldKy8sICdnJyk7XG5cbmNvbnN0IHJlc291cmNlTmFtZVJ1bGVzOiB7XG4gIFtwcm92aWRlcjogc3RyaW5nXToge1xuICAgIFtyZXNvdXJjZVR5cGU6IHN0cmluZ106IE5hbWVSZXN0cmljdGlvblxuICB9XG59ID0ge1xuICBBV1M6IHtcbiAgICBzM0J1Y2tldE5hbWU6IHtcbiAgICAvLyBzb3VyY2U6IGh0dHBzOi8vZG9jcy5hd3MuYW1hem9uLmNvbS9BbWF6b25TMy9sYXRlc3QvdXNlcmd1aWRlL2J1Y2tldG5hbWluZ3J1bGVzLmh0bWxcbiAgICAgIGNoYXJhY3RlckxpbWl0OiA2MyxcbiAgICAgIGNoYXJhY3RlclJlc3RyaWN0aW9uczogYWxwaGFOdW1lcmljQW5kSHlwaGVuXG4gICAgfSxcbiAgICBpYW1Sb2xlTmFtZToge1xuICAgICAgY2hhcmFjdGVyTGltaXQ6IDY0LFxuICAgICAgY2hhcmFjdGVyUmVzdHJpY3Rpb25zOiBhbHBoYU51bWVyaWNBbmRIeXBoZW5cbiAgICB9LFxuICAgIGxhbWJkYUZ1bmN0aW9uTmFtZToge1xuICAgICAgY2hhcmFjdGVyTGltaXQ6IDY0LFxuICAgICAgY2hhcmFjdGVyUmVzdHJpY3Rpb25zOiBhbHBoYU51bWVyaWNBbmRIeXBoZW5cbiAgICB9LFxuICAgIHNlY3JldE5hbWU6IHtcbiAgICAgIGNoYXJhY3RlckxpbWl0OiA1MTIsXG4gICAgICBjaGFyYWN0ZXJSZXN0cmljdGlvbnM6IGFscGhhTnVtZXJpY0FuZEh5cGhlblxuICAgIH0sXG4gICAgY2xvdWRGb3JtYXRpb25Mb2dpY2FsSWQ6IHtcbiAgICAgIGNoYXJhY3RlckxpbWl0OiAyNTUsXG4gICAgICBjaGFyYWN0ZXJSZXN0cmljdGlvbnM6IGFscGhhTnVtZXJpY09ubHlcbiAgICB9LFxuICAgIGFwaWdOYW1lOiB7XG4gICAgICBjaGFyYWN0ZXJMaW1pdDogMjU1LFxuICAgICAgY2hhcmFjdGVyUmVzdHJpY3Rpb25zOiBhbHBoYU51bWVyaWNBbmRIeXBoZW5cbiAgICB9LFxuICAgIGNvZGVidWlsZFByb2plY3ROYW1lOiB7XG4gICAgICBjaGFyYWN0ZXJMaW1pdDogMjU1LFxuICAgICAgY2hhcmFjdGVyUmVzdHJpY3Rpb25zOiBhbHBoYU51bWVyaWNBbmRIeXBoZW5cbiAgICB9LFxuICAgIGxvZ0dyb3VwTmFtZToge1xuICAgICAgY2hhcmFjdGVyTGltaXQ6IDUxMixcbiAgICAgIGNoYXJhY3RlclJlc3RyaWN0aW9uczogYWxwaGFOdW1lcmljQW5kSHlwaGVuXG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQge1xuICBhbHBoYU51bWVyaWNBbmRIeXBoZW4sXG4gIGFscGhhTnVtZXJpY09ubHksXG4gIHJlc291cmNlTmFtZVJ1bGVzXG59OyJdfQ==