"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resourceNameRules = exports.alphaNumericOnlyAllowedCharacters = exports.alphaNumericOnly = exports.alphaNumericAndHyphenAllowedCharacterTypes = exports.alphaNumericAndHyphen = void 0;
const alphaNumericAndHyphen = /[^a-zA-Z0-9-]+/;
exports.alphaNumericAndHyphen = alphaNumericAndHyphen;
const alphaNumericAndHyphenAllowedCharacterTypes = 'alphanumeric characters and hyphens';
exports.alphaNumericAndHyphenAllowedCharacterTypes = alphaNumericAndHyphenAllowedCharacterTypes;
const alphaNumericOnly = /[^a-zA-Z0-9]+/;
exports.alphaNumericOnly = alphaNumericOnly;
const alphaNumericOnlyAllowedCharacters = 'alphanumeric characters';
exports.alphaNumericOnlyAllowedCharacters = alphaNumericOnlyAllowedCharacters;
const resourceNameRules = {
    AWS: {
        s3BucketName: {
            // source: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
            characterLimit: 63,
            characterRestrictions: alphaNumericAndHyphen,
            allowedCharacterTypes: alphaNumericAndHyphenAllowedCharacterTypes
        },
        iamRoleName: {
            characterLimit: 64,
            characterRestrictions: alphaNumericAndHyphen,
            allowedCharacterTypes: alphaNumericAndHyphenAllowedCharacterTypes
        },
        lambdaFunctionName: {
            characterLimit: 64,
            characterRestrictions: alphaNumericAndHyphen,
            allowedCharacterTypes: alphaNumericAndHyphenAllowedCharacterTypes
        },
        secretName: {
            characterLimit: 512,
            characterRestrictions: alphaNumericAndHyphen,
            allowedCharacterTypes: alphaNumericAndHyphenAllowedCharacterTypes
        },
        cloudFormationLogicalId: {
            characterLimit: 255,
            characterRestrictions: alphaNumericOnly,
            allowedCharacterTypes: alphaNumericOnlyAllowedCharacters
        },
        apigName: {
            characterLimit: 255,
            characterRestrictions: alphaNumericAndHyphen,
            allowedCharacterTypes: alphaNumericAndHyphenAllowedCharacterTypes
        },
        codebuildProjectName: {
            characterLimit: 255,
            characterRestrictions: alphaNumericAndHyphen,
            allowedCharacterTypes: alphaNumericAndHyphenAllowedCharacterTypes
        },
        logGroupName: {
            characterLimit: 512,
            characterRestrictions: alphaNumericAndHyphen,
            allowedCharacterTypes: alphaNumericAndHyphenAllowedCharacterTypes
        }
    },
    TinyStacks: {
        iacStackName: {
            minimumLength: 2,
            characterLimit: 64,
            characterRestrictions: alphaNumericAndHyphen,
            allowedCharacterTypes: alphaNumericAndHyphenAllowedCharacterTypes
        }
    }
};
exports.resourceNameRules = resourceNameRules;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtaW5nLXJlc3RyaWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9uYW1pbmcvbmFtaW5nLXJlc3RyaWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxNQUFNLHFCQUFxQixHQUFHLGdCQUFnQixDQUFDO0FBZ0U3QyxzREFBcUI7QUEvRHZCLE1BQU0sMENBQTBDLEdBQUcscUNBQXFDLENBQUM7QUFnRXZGLGdHQUEwQztBQS9ENUMsTUFBTSxnQkFBZ0IsR0FBRyxlQUFlLENBQUM7QUFnRXZDLDRDQUFnQjtBQS9EbEIsTUFBTSxpQ0FBaUMsR0FBRyx5QkFBeUIsQ0FBQztBQWdFbEUsOEVBQWlDO0FBOURuQyxNQUFNLGlCQUFpQixHQUluQjtJQUNGLEdBQUcsRUFBRTtRQUNILFlBQVksRUFBRTtZQUNkLHVGQUF1RjtZQUNyRixjQUFjLEVBQUUsRUFBRTtZQUNsQixxQkFBcUIsRUFBRSxxQkFBcUI7WUFDNUMscUJBQXFCLEVBQUUsMENBQTBDO1NBQ2xFO1FBQ0QsV0FBVyxFQUFFO1lBQ1gsY0FBYyxFQUFFLEVBQUU7WUFDbEIscUJBQXFCLEVBQUUscUJBQXFCO1lBQzVDLHFCQUFxQixFQUFFLDBDQUEwQztTQUNsRTtRQUNELGtCQUFrQixFQUFFO1lBQ2xCLGNBQWMsRUFBRSxFQUFFO1lBQ2xCLHFCQUFxQixFQUFFLHFCQUFxQjtZQUM1QyxxQkFBcUIsRUFBRSwwQ0FBMEM7U0FDbEU7UUFDRCxVQUFVLEVBQUU7WUFDVixjQUFjLEVBQUUsR0FBRztZQUNuQixxQkFBcUIsRUFBRSxxQkFBcUI7WUFDNUMscUJBQXFCLEVBQUUsMENBQTBDO1NBQ2xFO1FBQ0QsdUJBQXVCLEVBQUU7WUFDdkIsY0FBYyxFQUFFLEdBQUc7WUFDbkIscUJBQXFCLEVBQUUsZ0JBQWdCO1lBQ3ZDLHFCQUFxQixFQUFFLGlDQUFpQztTQUN6RDtRQUNELFFBQVEsRUFBRTtZQUNSLGNBQWMsRUFBRSxHQUFHO1lBQ25CLHFCQUFxQixFQUFFLHFCQUFxQjtZQUM1QyxxQkFBcUIsRUFBRSwwQ0FBMEM7U0FDbEU7UUFDRCxvQkFBb0IsRUFBRTtZQUNwQixjQUFjLEVBQUUsR0FBRztZQUNuQixxQkFBcUIsRUFBRSxxQkFBcUI7WUFDNUMscUJBQXFCLEVBQUUsMENBQTBDO1NBQ2xFO1FBQ0QsWUFBWSxFQUFFO1lBQ1osY0FBYyxFQUFFLEdBQUc7WUFDbkIscUJBQXFCLEVBQUUscUJBQXFCO1lBQzVDLHFCQUFxQixFQUFFLDBDQUEwQztTQUNsRTtLQUNGO0lBQ0QsVUFBVSxFQUFFO1FBQ1YsWUFBWSxFQUFFO1lBQ1osYUFBYSxFQUFFLENBQUM7WUFDaEIsY0FBYyxFQUFFLEVBQUU7WUFDbEIscUJBQXFCLEVBQUUscUJBQXFCO1lBQzVDLHFCQUFxQixFQUFFLDBDQUEwQztTQUNsRTtLQUNGO0NBQ0YsQ0FBQztBQU9BLDhDQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5hbWVSZXN0cmljdGlvbiB9IGZyb20gJy4vdHlwZXMnO1xuXG5jb25zdCBhbHBoYU51bWVyaWNBbmRIeXBoZW4gPSAvW15hLXpBLVowLTktXSsvO1xuY29uc3QgYWxwaGFOdW1lcmljQW5kSHlwaGVuQWxsb3dlZENoYXJhY3RlclR5cGVzID0gJ2FscGhhbnVtZXJpYyBjaGFyYWN0ZXJzIGFuZCBoeXBoZW5zJztcbmNvbnN0IGFscGhhTnVtZXJpY09ubHkgPSAvW15hLXpBLVowLTldKy87XG5jb25zdCBhbHBoYU51bWVyaWNPbmx5QWxsb3dlZENoYXJhY3RlcnMgPSAnYWxwaGFudW1lcmljIGNoYXJhY3RlcnMnO1xuXG5jb25zdCByZXNvdXJjZU5hbWVSdWxlczoge1xuICBbcHJvdmlkZXI6IHN0cmluZ106IHtcbiAgICBbcmVzb3VyY2VUeXBlOiBzdHJpbmddOiBOYW1lUmVzdHJpY3Rpb25cbiAgfVxufSA9IHtcbiAgQVdTOiB7XG4gICAgczNCdWNrZXROYW1lOiB7XG4gICAgLy8gc291cmNlOiBodHRwczovL2RvY3MuYXdzLmFtYXpvbi5jb20vQW1hem9uUzMvbGF0ZXN0L3VzZXJndWlkZS9idWNrZXRuYW1pbmdydWxlcy5odG1sXG4gICAgICBjaGFyYWN0ZXJMaW1pdDogNjMsXG4gICAgICBjaGFyYWN0ZXJSZXN0cmljdGlvbnM6IGFscGhhTnVtZXJpY0FuZEh5cGhlbixcbiAgICAgIGFsbG93ZWRDaGFyYWN0ZXJUeXBlczogYWxwaGFOdW1lcmljQW5kSHlwaGVuQWxsb3dlZENoYXJhY3RlclR5cGVzXG4gICAgfSxcbiAgICBpYW1Sb2xlTmFtZToge1xuICAgICAgY2hhcmFjdGVyTGltaXQ6IDY0LFxuICAgICAgY2hhcmFjdGVyUmVzdHJpY3Rpb25zOiBhbHBoYU51bWVyaWNBbmRIeXBoZW4sXG4gICAgICBhbGxvd2VkQ2hhcmFjdGVyVHlwZXM6IGFscGhhTnVtZXJpY0FuZEh5cGhlbkFsbG93ZWRDaGFyYWN0ZXJUeXBlc1xuICAgIH0sXG4gICAgbGFtYmRhRnVuY3Rpb25OYW1lOiB7XG4gICAgICBjaGFyYWN0ZXJMaW1pdDogNjQsXG4gICAgICBjaGFyYWN0ZXJSZXN0cmljdGlvbnM6IGFscGhhTnVtZXJpY0FuZEh5cGhlbixcbiAgICAgIGFsbG93ZWRDaGFyYWN0ZXJUeXBlczogYWxwaGFOdW1lcmljQW5kSHlwaGVuQWxsb3dlZENoYXJhY3RlclR5cGVzXG4gICAgfSxcbiAgICBzZWNyZXROYW1lOiB7XG4gICAgICBjaGFyYWN0ZXJMaW1pdDogNTEyLFxuICAgICAgY2hhcmFjdGVyUmVzdHJpY3Rpb25zOiBhbHBoYU51bWVyaWNBbmRIeXBoZW4sXG4gICAgICBhbGxvd2VkQ2hhcmFjdGVyVHlwZXM6IGFscGhhTnVtZXJpY0FuZEh5cGhlbkFsbG93ZWRDaGFyYWN0ZXJUeXBlc1xuICAgIH0sXG4gICAgY2xvdWRGb3JtYXRpb25Mb2dpY2FsSWQ6IHtcbiAgICAgIGNoYXJhY3RlckxpbWl0OiAyNTUsXG4gICAgICBjaGFyYWN0ZXJSZXN0cmljdGlvbnM6IGFscGhhTnVtZXJpY09ubHksXG4gICAgICBhbGxvd2VkQ2hhcmFjdGVyVHlwZXM6IGFscGhhTnVtZXJpY09ubHlBbGxvd2VkQ2hhcmFjdGVyc1xuICAgIH0sXG4gICAgYXBpZ05hbWU6IHtcbiAgICAgIGNoYXJhY3RlckxpbWl0OiAyNTUsXG4gICAgICBjaGFyYWN0ZXJSZXN0cmljdGlvbnM6IGFscGhhTnVtZXJpY0FuZEh5cGhlbixcbiAgICAgIGFsbG93ZWRDaGFyYWN0ZXJUeXBlczogYWxwaGFOdW1lcmljQW5kSHlwaGVuQWxsb3dlZENoYXJhY3RlclR5cGVzXG4gICAgfSxcbiAgICBjb2RlYnVpbGRQcm9qZWN0TmFtZToge1xuICAgICAgY2hhcmFjdGVyTGltaXQ6IDI1NSxcbiAgICAgIGNoYXJhY3RlclJlc3RyaWN0aW9uczogYWxwaGFOdW1lcmljQW5kSHlwaGVuLFxuICAgICAgYWxsb3dlZENoYXJhY3RlclR5cGVzOiBhbHBoYU51bWVyaWNBbmRIeXBoZW5BbGxvd2VkQ2hhcmFjdGVyVHlwZXNcbiAgICB9LFxuICAgIGxvZ0dyb3VwTmFtZToge1xuICAgICAgY2hhcmFjdGVyTGltaXQ6IDUxMixcbiAgICAgIGNoYXJhY3RlclJlc3RyaWN0aW9uczogYWxwaGFOdW1lcmljQW5kSHlwaGVuLFxuICAgICAgYWxsb3dlZENoYXJhY3RlclR5cGVzOiBhbHBoYU51bWVyaWNBbmRIeXBoZW5BbGxvd2VkQ2hhcmFjdGVyVHlwZXNcbiAgICB9XG4gIH0sXG4gIFRpbnlTdGFja3M6IHtcbiAgICBpYWNTdGFja05hbWU6IHtcbiAgICAgIG1pbmltdW1MZW5ndGg6IDIsXG4gICAgICBjaGFyYWN0ZXJMaW1pdDogNjQsXG4gICAgICBjaGFyYWN0ZXJSZXN0cmljdGlvbnM6IGFscGhhTnVtZXJpY0FuZEh5cGhlbixcbiAgICAgIGFsbG93ZWRDaGFyYWN0ZXJUeXBlczogYWxwaGFOdW1lcmljQW5kSHlwaGVuQWxsb3dlZENoYXJhY3RlclR5cGVzXG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQge1xuICBhbHBoYU51bWVyaWNBbmRIeXBoZW4sXG4gIGFscGhhTnVtZXJpY0FuZEh5cGhlbkFsbG93ZWRDaGFyYWN0ZXJUeXBlcyxcbiAgYWxwaGFOdW1lcmljT25seSxcbiAgYWxwaGFOdW1lcmljT25seUFsbG93ZWRDaGFyYWN0ZXJzLFxuICByZXNvdXJjZU5hbWVSdWxlc1xufTsiXX0=